---
import { cn } from "@/lib/utils";
import Nav from '@/components/Nav';

const title =
  "Kerja Remote Network";
const description =
  "Kerja Remote Network List Directory";
const url = "https://placeholder.com";
const image = "/public/preview.webp";
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="robots" content="index, follow" />

    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />

    <title>
      {title}
    </title>
    <meta name="description" content={description} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={image} />
    <meta property="og:url" content={url} />
    <meta property="og:type" content="website" />

    <meta name="twitter:card" content="summary_large_image" />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={image} />

    <script type="application/ld+json">
      {
        "@context": "http://schema.org",
        "@type": "WebSite",
        "url": "https://placeholder.com",
        "name":   "Kerjaremote.net",
        "description": "Kerja Remote Network Directory"
      }
    </script>

    <!-- Script for light/dark mode -->
    <script is:inline>
      const getThemePreference = () => {
        if (
          typeof localStorage !== "undefined" &&
          localStorage.getItem("theme")
        ) {
          return localStorage.getItem("theme");
        }
        return window.matchMedia("(prefers-color-scheme: light)").matches
          ? "dark"
          : "light";
      };
      const isDark = getThemePreference() === "dark";
      document.documentElement.classList[isDark ? "add" : "remove"]("dark");

      if (typeof localStorage !== "undefined") {
        const observer = new MutationObserver(() => {
          const isDark = document.documentElement.classList.contains("dark");
          localStorage.setItem("theme", isDark ? "dark" : "light");
        });
        observer.observe(document.documentElement, {
          attributes: true,
          attributeFilter: ["class"],
        });
      }
    </script>
  </head>
  <body class={cn("bg-background font-sans text-primary")}>
    <Nav client:load />
    <slot />
  </body>
</html>
